@model List<AppMVCWeb.Areas.Product.Models.CartItem>
@{
    Layout = "_Layout";
    ViewData["Title"] = "Giỏ hàng";
}
<h2>Giỏ hàng</h2>

@if (Model.Count > 0)
{
    decimal totalPrice = 0;
    int stt = 0;

    <table class="table">
        <tr>
            <th>#</th>
            <th>Sản phẩm</th>
            <th>Giá</th>
            <th>Số lượng</th>
            <th>Thành tiền</th>
            <th></th>
        </tr>
        @foreach (var cartItem in Model)
        {
            // Cập nhật giá trị thành tiền của từng sản phẩm
            var cartItemTotalPrice = cartItem.Quantity * cartItem.Product.Price;
            totalPrice += cartItemTotalPrice;

            <tr>
                <td class="fw-bold">@(++stt)</td>
                <td>@cartItem.Product.Title</td>
                <td>@(cartItem.Product.Price.ToString("n0"))</td>
                <td>
                    <input asp-for="@cartItem.Quantity" id="@($"quantity-{cartItem.Product.ProductId}")" min="1" onchange="updateCartItem('@cartItem.Product.ProductId', this.value)" />
                </td>
                <td>@(cartItemTotalPrice.ToString("n0"))</td>
                <td>
                    <a asp-route="removecart" asp-route-productid="@cartItem.Product.ProductId" class="btn btn-danger">Xóa</a>
                </td>
            </tr>
        }
        <tr>
            <td colspan="4" class="text-right fw-bold">Tổng tiền</td>
            <td class="fw-bold">@(totalPrice.ToString("n0"))</td>
            <td></td>
        </tr>
    </table>

    <form asp-action="Checkout" method="post">
        <div class="mb-3">
            <label for="customerName" class="form-label">Tên khách hàng</label>
            <input type="text" class="form-control" id="customerName" name="customerName" required>
        </div>
        <div class="mb-3">
            <label for="customerPhone" class="form-label">Số điện thoại</label>
            <input type="text" class="form-control" id="customerPhone" name="customerPhone" required>
        </div>
        <div class="mb-3">
            <label for="customerAddress" class="form-label">Địa chỉ</label>
            <input type="text" class="form-control" id="customerAddress" name="customerAddress" required>
        </div>
        <input type="hidden" name="PaymentMethod" value="COD" />
        <button type="submit" class="btn btn-success">Gửi đơn hàng (COD)</button>
        <div id="paypal-button-container" class="mt-3"></div>
    </form>    

    @section Scripts
    {
    <script src="https://www.paypal.com/sdk/js?client-id=@ViewBag.PaypalClientId"></script>

    <script>
        function updateCartItem(productId, quantity) {
            $.ajax({
                type: "POST",
                url: "@Url.RouteUrl("updatecart")",
                data: {
                    productid: productId,
                    quantity: quantity
                },
                success: function (result) {
                    window.location.href = "@Url.RouteUrl("cart")";
                }
            });
        }

        function validateCustomerInfo() {
            const customerName = document.getElementById('customerName').value;
            const customerPhone = document.getElementById('customerPhone').value;
            const customerAddress = document.getElementById('customerAddress').value;

            if (!customerName || !customerPhone || !customerAddress) {
                alert('Vui lòng điền đầy đủ thông tin khách hàng.');
                return false;
            }

            return {
                customerName: customerName,
                customerPhone: customerPhone,
                customerAddress: customerAddress
            };
        }

        paypal.Buttons({
            style: {
                layout: 'vertical',
                color: 'gold',
                shape: 'rect',
                label: 'paypal'
            },
            createOrder: function (data, actions) {
                const customerInfo = validateCustomerInfo();
                if (!customerInfo) {
                    return;
                }

                return fetch('/Cart/create-paypal-order', {
                    method: 'POST',
                    headers: {
                        'content-type': 'application/json'
                    },
                    body: JSON.stringify(customerInfo)
                }).then(res => {
                    if (!res.ok) {
                        return res.text().then(text => {
                            throw new Error(text);
                        });
                    }
                    return res.json();
                }).then(order => {
                    return order.id;
                }).catch(err => {
                    console.error(err);
                    alert('Đã xảy ra lỗi khi tạo đơn hàng: ' + err.message);
                });
            },
            onApprove: function (data, actions) {
                return fetch(`/Cart/capture-paypal-order?orderId=${data.orderID}`, {
                    method: 'POST',
                    headers: {
                        'content-type': 'application/json'
                    },
                    body: JSON.stringify(validateCustomerInfo())
                }).then(res => {
                    if (!res.ok) {
                        return res.text().then(text => {
                            throw new Error(text);
                        });
                    }
                    return res.json();
                }).then(details => {
                    alert('Transaction completed by ' + details.payer.name.given_name);
                    window.location.href = "/Cart/PaymentSuccess";
                }).catch(err => {
                    console.error(err);
                    alert('Đã xảy ra lỗi khi tạo đơn hàng: ' + err.message);
                });
            }
        }).render('#paypal-button-container');
    </script>
    }
}
else
{
    <p class="alert alert-danger">Giỏ hàng trống</p>
}
